///https://leetcode.com/problems/optimal-partition-of-string/description/?envType=study-plan-v2&envId=amazon-spring-23-high-frequency

class Solution {
public:
    int partitionString(string s) {
        map<char, int> m;
        int ans = 1;
        for(int i = 0;i<s.size(); i++){
            m[s[i]]++;
            if(m[s[i]] == 2){
                ans++;
                for(int j = 0; j<26; j++){
                    if(m.find((char)('a'+ j))!=m.end()){
                        m[(char)('a'+ j)] = 0;
                    }
                }
                m[s[i]] = 1;
            }
        }
        return ans;
    }
};
