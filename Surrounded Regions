///https://leetcode.com/problems/surrounded-regions/description/?envType=study-plan-v2&envId=top-interview-150


class Solution {
public:

    int dx[4] = {0, 0, 1, -1};
    int dy[4] = {1, -1, 0, 0};

    
    bool isValid(int n, int m, int x, int y) {
        return (x >= 0 && x < n && y >= 0 && y < m );
    }

    void dfs(int x, int y, int n, int m, vector<vector<char>>& grid) {
        if(!isValid(n,m,x,y) || grid[x][y] != 'O' ) return ;
       
        grid[x][y] = '#';

        for (int i = 0; i < 4; i++) {
            int newX = x + dx[i];
            int newY = y + dy[i];
            
                dfs(newX, newY, n, m, grid);
            
        }
    }



    void solve(vector<vector<char>>& grid) {
        if (grid.empty() || grid[0].empty()) return;
        int n = grid.size();
        int m = grid[0].size();
 
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                
                if (grid[i][j] == 'O' && ( i==0 || i==n-1 || j==0 || j== m-1 )) {
                    
                    dfs(i, j, n, m, grid); 
                }
            }
        }

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){

                if(grid[i][j] == 'O'){
                    grid[i][j] = 'X';
                }
                else if(grid[i][j] == '#'){
                    grid[i][j] = 'O';
                }
            }
        }


    }
};

