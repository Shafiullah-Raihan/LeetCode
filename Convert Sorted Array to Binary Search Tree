///https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/description/?envType=study-plan-v2&envId=top-interview-150

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    TreeNode* sortedArrayToBST(int start,int end, vector<int>& nums)
    {
        if(start>end){
            return nullptr;
        }
        int mid = start + ((end-start)/2);

        TreeNode* root = new TreeNode(nums[mid]);

        root->left = sortedArrayToBST(start,mid-1,nums);
        root->right = sortedArrayToBST(mid+1,end,nums);

        return root;
    }



    TreeNode* sortedArrayToBST(vector<int>& nums) {
        TreeNode* root = sortedArrayToBST(0,nums.size()-1,nums);
        return root;

        
    }

};
