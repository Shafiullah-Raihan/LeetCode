///https://leetcode.com/problems/combination-sum-iii/

class Solution {
public:
    void solve(vector<int>&nums, int index, int k, int target, vector<vector<int>> &ans, vector<int> &temp)
    {
        if(k == 0)
        {
            if(target == 0) 
                ans.push_back(temp);
            return;
        }
        
        for(int i=index;i<nums.size();i++)    
        {
            if(nums[i] > target) break;
            temp.push_back(nums[i]);
            solve(nums, i+1, k-1, target-nums[i], ans, temp);
            temp.pop_back();
        }
    }
    
    vector<vector<int>> combinationSum3(int k, int n) 
    {
        vector<int>nums = {1,2,3,4,5,6,7,8,9};
        vector<vector<int>> ans;
        vector<int>temp;
        int target = n;

        solve(nums, 0, k, target, ans, temp);
        return ans;
    }
};
