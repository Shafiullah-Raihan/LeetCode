///https://leetcode.com/problems/average-of-levels-in-binary-tree/submissions/1467943635/?envType=study-plan-v2&envId=top-interview-150



/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        
        if(!root){
            return {};
        }
        vector<double>avg;


        queue<TreeNode*>q;

        q.push(root);

        while(!q.empty()){
            int sz = q.size();
            double sum=0;
            
            for(int i=0;i<sz;i++)
            {
                TreeNode* first = q.front();
                sum += first->val;
                q.pop();
                if(first->left){
                    q.push(first->left);
                }
                if(first->right){
                    q.push(first->right);
                }
            }
            avg.push_back(sum/sz);

        }
        return avg;

    }
};
