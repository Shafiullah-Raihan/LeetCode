///https://leetcode.com/problems/number-of-provinces/


class Solution {
public:
    
    


    void dfs(vector<vector<int>>& adj, vector<bool>& vis, int node){
        vis[node] = true;
        for(auto u:adj[node]){
            if(!vis[u]){
                dfs(adj,vis,u);
            }
        }

    }


    int findCircleNum(vector<vector<int>>& isConnected) {
        int n = isConnected.size();
        vector<vector<int>> adj(n);
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(isConnected[i][j] && i!=j){
                    adj[i].push_back(j);
                    

                }
            }
        }

        int cnt=0;
        vector<bool>vis(n,false);
        for(int i=0;i<n;i++){
            if(!vis[i]){
                dfs(adj,vis,i);
                cnt++;
            }
        }
        return cnt;
    }
    
};
