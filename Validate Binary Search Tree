///https://leetcode.com/problems/validate-binary-search-tree/description/?envType=study-plan-v2&envId=top-interview-150


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool valid(TreeNode* root, long long left,long long right)
    {
        if(!root) return true;
        if(root->val > left && root->val <right)
        {
            return (valid(root->left,left,root->val) &&  valid(root->right,root->val, right));
        }
        else{
            return false;
        } 
    }




    bool isValidBST(TreeNode* root) {
        long long left= LLONG_MIN, right = LLONG_MAX;
        return valid(root,left,right);
    }
};
