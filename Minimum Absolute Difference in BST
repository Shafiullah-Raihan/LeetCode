///https://leetcode.com/problems/minimum-absolute-difference-in-bst/description/?envType=study-plan-v2&envId=top-interview-150


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    void getMinValue(TreeNode* root,int& result,int& preNode)
    {
        if(root== nullptr) return ;

        getMinValue(root->left,result,preNode);
        if(preNode != -1) result = min(result,root->val - preNode);
        preNode = root->val;

        getMinValue(root->right,result,preNode);
    }

    int getMinimumDifference(TreeNode* root) {
        
        int result = INT_MAX, preNode = -1;
        getMinValue(root,result,preNode);
        return result;
    }
};

