///https://leetcode.com/problems/binary-tree-level-order-traversal/description/?envType=study-plan-v2&envId=top-interview-150

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        if(!root) return {};
        queue<TreeNode*> q;
        vector<vector<int>>v;
        
        q.push(root);

        while(!q.empty())
        {
            vector<int>temp;
            int sz=q.size();
            
            
            for(int i=0;i<sz;i++)
            {   
                TreeNode* first = q.front();
                q.pop();

                temp.push_back(first->val);
                if(first->left){
                    q.push(first->left);
                }
                if(first->right){
                    q.push(first->right);
                }
            }
            v.push_back(temp);
        }
        return v;
    }
};
