///https://leetcode.com/problems/circular-permutation-in-binary-representation/

class Solution {
public:
    vector<int> circularPermutation(int n, int start) {
        int total = 1<<n;
        vector<int>grayCode,ans;
        for(int i=0;i<total;i++)
        {
            grayCode.push_back(i^(i>>1));
        }
        int startIndex=0;
        for(int i=0;i<total;i++)
        {
            if(grayCode[i] == start){
                startIndex = i;
                break;
            }
        }
        
        for(int i=0;i<total;i++){
            ans.push_back(grayCode[(startIndex+i)%total]);
        }
        return ans;
    }
};
