///https://leetcode.com/problems/minimum-speed-to-arrive-on-time/description/

class Solution {
public:
    bool isValid(int speed, vector<int>& dist, double hour)
    {
        double total =0.0;
        int n = dist.size();
        for(int i=0;i<n-1;i++){
            total += ceil((double) dist[i]/speed);
        }
        total += (double)dist[n-1]/speed;
        return total <=hour;
    }


    int minSpeedOnTime(vector<int>& dist, double hour) {
        
        int low =1,high=1e9,ans = -1;
        while(low<=high)
        {
            int mid = low + (high-low)/2;
            if(isValid(mid,dist,hour))
            {
                ans = mid;
                high = mid-1;
            }
            else{
                low = mid+1;
            }
        }
        return ans;

    }
};
