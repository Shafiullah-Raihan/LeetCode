///https://leetcode.com/problems/minimum-lines-to-represent-a-line-chart/description/

#define ll long long

class Solution {
public:
    bool same(vector<vector<int>>& stockPrices,ll i)
    {
        ll x1 = stockPrices[i-2][0],y1 = stockPrices[i-2][1];
        ll x2 = stockPrices[i-1][0],y2 = stockPrices[i-1][1];
        ll x3 = stockPrices[i][0],y3 = stockPrices[i][1];
        return ((y3-y2)*(x2-x1) != (y2-y1)*(x3-x2));
    }
    

    int minimumLines(vector<vector<int>>& stockPrices) {
    ll n = stockPrices.size();
    if (n < 2) return 0;
    
    sort(stockPrices.begin(), stockPrices.end());

    ll cnt = 1;
    for (ll i = 2; i < n; i++) {
        if (same(stockPrices, i)) {
            cnt++;
        }
    }
    return cnt;
}
};
