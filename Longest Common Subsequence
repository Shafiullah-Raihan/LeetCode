///https://leetcode.com/problems/longest-common-subsequence/description/



int len1,len2;
string s1,s2;
const int mx = 1e3+11;
int dp[mx][mx];

int solve(int i,int j){
    if(i>=len1 || j>=len2) return 0;
    if(dp[i][j] !=-1) return dp[i][j];
    int res=0;
    if(s1[i] == s2[j]){
        res=  1 + solve(i+1,j+1);
    }
    else{
        res = max(solve(i,j+1), solve(i+1,j));
    }

    return dp[i][j] = res;

}

class Solution {
public:



    int longestCommonSubsequence(string text1, string text2) {
        s1 = text1,s2= text2,len1 = text1.size(),len2 = text2.size();
        memset(dp,-1,sizeof(dp));
        return solve(0,0);
    }
};
