///https://leetcode.com/problems/remove-nth-node-from-end-of-list/description/?envType=study-plan-v2&envId=top-interview-150


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* dummy = new ListNode();
        dummy->next = head;
        ListNode* first = dummy;
        ListNode* second = dummy;
        for(int i=0;i<=n;i++){
            second = second->next;
        }
        while(second !=0){
            first = first->next;
            second = second -> next;
        }

        ListNode* temp = first->next;
        first->next = first -> next -> next;
        delete temp;

        return dummy -> next;
        
    }
};
