///https://leetcode.com/problems/maximum-product-of-word-lengths/description/


class Solution {
public:
    int calculateMask(string &s)
    {   
        int bit =0;
        for(auto u:s)
        {
            bit = bit | (1<<(u-'a'));
        }
        return bit;
    }


    int maxProduct(vector<string>& words) {
        int n = words.size();
        vector<int>mask(n),len(n);
        for(int i=0;i<n;i++)
        {
            mask[i] = calculateMask(words[i]);
            len[i] = words[i].size();
        }
        int ans=0;

        for(int i=0;i<n;i++)
        {
            for(int j=i+1;j<n;j++)
            {
                if((mask[i] & mask[j]) == 0)
                {
                    ans = max(ans,len[i]*len[j]);
                }
            }
        }
        return ans;
    }
};
