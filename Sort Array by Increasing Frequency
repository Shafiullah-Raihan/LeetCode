///https://leetcode.com/problems/sort-array-by-increasing-frequency/description/

class Solution {
public:
static bool cmp(pair<int,int>& a, pair<int,int>& b){
        if(a.second == b.second){
            return a.first>b.first;
        }
        return a.second<b.second;
    }
    vector<int> frequencySort(vector<int>& nums) {
        unordered_map<int,int>mp;
        int n= nums.size();
        vector<pair<int,int>>v;
        for(int i=0;i<n;i++){
            mp[nums[i]]++;
        }
        copy(mp.begin(),mp.end(),back_inserter(v));
        sort(v.begin(),v.end(),cmp);
        vector<int>ans;
        for(int i=0;i<v.size();i++){
            for(int j=0;j<v[i].second;j++)
            {
                ans.push_back(v[i].first);
            }
        }
        mp.clear();
        return ans;
    }
};

    
    
